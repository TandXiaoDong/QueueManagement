//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace QueueServiceTest.CalQueueService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://callSystem.service/", ConfigurationName="CalQueueService.CallServiceSoap")]
    public interface CallServiceSoap {
        
        // CODEGEN: 命名空间 http://callSystem.service/ 的元素名称 patientID 以后生成的消息协定未标记为 nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://callSystem.service/callAndRecalPatient", ReplyAction="*")]
        QueueServiceTest.CalQueueService.callAndRecalPatientResponse callAndRecalPatient(QueueServiceTest.CalQueueService.callAndRecalPatientRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://callSystem.service/callAndRecalPatient", ReplyAction="*")]
        System.Threading.Tasks.Task<QueueServiceTest.CalQueueService.callAndRecalPatientResponse> callAndRecalPatientAsync(QueueServiceTest.CalQueueService.callAndRecalPatientRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class callAndRecalPatientRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="callAndRecalPatient", Namespace="http://callSystem.service/", Order=0)]
        public QueueServiceTest.CalQueueService.callAndRecalPatientRequestBody Body;
        
        public callAndRecalPatientRequest() {
        }
        
        public callAndRecalPatientRequest(QueueServiceTest.CalQueueService.callAndRecalPatientRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://callSystem.service/")]
    public partial class callAndRecalPatientRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string patientID;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string patientName;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string counterID;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int action;
        
        public callAndRecalPatientRequestBody() {
        }
        
        public callAndRecalPatientRequestBody(string patientID, string patientName, string counterID, int action) {
            this.patientID = patientID;
            this.patientName = patientName;
            this.counterID = counterID;
            this.action = action;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class callAndRecalPatientResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="callAndRecalPatientResponse", Namespace="http://callSystem.service/", Order=0)]
        public QueueServiceTest.CalQueueService.callAndRecalPatientResponseBody Body;
        
        public callAndRecalPatientResponse() {
        }
        
        public callAndRecalPatientResponse(QueueServiceTest.CalQueueService.callAndRecalPatientResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://callSystem.service/")]
    public partial class callAndRecalPatientResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string callAndRecalPatientResult;
        
        public callAndRecalPatientResponseBody() {
        }
        
        public callAndRecalPatientResponseBody(string callAndRecalPatientResult) {
            this.callAndRecalPatientResult = callAndRecalPatientResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CallServiceSoapChannel : QueueServiceTest.CalQueueService.CallServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CallServiceSoapClient : System.ServiceModel.ClientBase<QueueServiceTest.CalQueueService.CallServiceSoap>, QueueServiceTest.CalQueueService.CallServiceSoap {
        
        public CallServiceSoapClient() {
        }
        
        public CallServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CallServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CallServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CallServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        QueueServiceTest.CalQueueService.callAndRecalPatientResponse QueueServiceTest.CalQueueService.CallServiceSoap.callAndRecalPatient(QueueServiceTest.CalQueueService.callAndRecalPatientRequest request) {
            return base.Channel.callAndRecalPatient(request);
        }
        
        public string callAndRecalPatient(string patientID, string patientName, string counterID, int action) {
            QueueServiceTest.CalQueueService.callAndRecalPatientRequest inValue = new QueueServiceTest.CalQueueService.callAndRecalPatientRequest();
            inValue.Body = new QueueServiceTest.CalQueueService.callAndRecalPatientRequestBody();
            inValue.Body.patientID = patientID;
            inValue.Body.patientName = patientName;
            inValue.Body.counterID = counterID;
            inValue.Body.action = action;
            QueueServiceTest.CalQueueService.callAndRecalPatientResponse retVal = ((QueueServiceTest.CalQueueService.CallServiceSoap)(this)).callAndRecalPatient(inValue);
            return retVal.Body.callAndRecalPatientResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<QueueServiceTest.CalQueueService.callAndRecalPatientResponse> QueueServiceTest.CalQueueService.CallServiceSoap.callAndRecalPatientAsync(QueueServiceTest.CalQueueService.callAndRecalPatientRequest request) {
            return base.Channel.callAndRecalPatientAsync(request);
        }
        
        public System.Threading.Tasks.Task<QueueServiceTest.CalQueueService.callAndRecalPatientResponse> callAndRecalPatientAsync(string patientID, string patientName, string counterID, int action) {
            QueueServiceTest.CalQueueService.callAndRecalPatientRequest inValue = new QueueServiceTest.CalQueueService.callAndRecalPatientRequest();
            inValue.Body = new QueueServiceTest.CalQueueService.callAndRecalPatientRequestBody();
            inValue.Body.patientID = patientID;
            inValue.Body.patientName = patientName;
            inValue.Body.counterID = counterID;
            inValue.Body.action = action;
            return ((QueueServiceTest.CalQueueService.CallServiceSoap)(this)).callAndRecalPatientAsync(inValue);
        }
    }
}
